name: Find merge conflicts

on:
  pull_request:
    types: [ synchronize ]
  push:
    branches:
      - "main"

env:
  MERGE_CONFLICT: "error | merge conflict"


jobs:
  check_pr_open_events:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          script: |
            async function getPullsNumber(owner, repo, branchName) {
              const prList = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "all",
              });

              const numberList = []
              prList.data.forEach((pr) => { numberList.push(pr.number) })
              return numberList
            }


            const pullsNumber = await getPullsNumber();

            # pullsNumber.forEach((number) => {
            #   const pr = await github.rest.pulls.get({
            #     owner: context.repo.owner,
            #     repo: context.repo.repo,
            #     pull_number: number,
            #   });

            #   if (pr_new.data.mergeable_state == "dirty") {
            #     console.warn('Meow!!!!!!!!!!!!!');
            #   }
            # })


      #       const pr = await github.rest.pulls.get({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: 1,
      #       });
      #       console.log(pr.data.mergeable_state);
      # - name: Sleep for 30 seconds
      #   run: sleep 30s
      #   shell: bash
      # - uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.ACTIONS_TOKEN }}
      #     script: |
      #       const pr = await github.rest.pulls.get({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: 1,
      #       });
      #       console.log(pr.data.mergeable_state);
